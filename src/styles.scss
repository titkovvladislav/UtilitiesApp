
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

$custom-typography: mat.define-legacy-typography-config(
  $font-family: 'Montserrat',
);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy($custom-typography);`
@include mat.all-legacy-component-typographies($custom-typography);
@include mat.legacy-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$utilities-app-primary: mat.define-palette(mat.$indigo-palette);
$utilities-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$utilities-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$utilities-app-theme: mat.define-light-theme((
  color: (
    primary: $utilities-app-primary,
    accent: $utilities-app-accent,
    warn: $utilities-app-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($utilities-app-theme);

/* You can add global styles to this file, and also import other style files */
//@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
//font-family: 'Rubik Iso', cursive;
@import url('https://fonts.googleapis.com/css2?family=Rubik+Iso&display=swap');

@font-face {
  font-family: 'Montserrat';
  src: url(/assets/font/Montserrat-Light.ttf) format("truetype");
  font-weight:300;
}

@font-face {
  font-family: 'Montserrat';
  src: url(/assets/font/Montserrat-Regular.ttf) format("truetype");
  font-weight:400;
}

html, body { height: 100%;}
body { margin: 0; }
@import "normalize.css";
@import "app/shared/styles/colors.css";
